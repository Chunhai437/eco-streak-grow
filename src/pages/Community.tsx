
import React, { useState } from 'react';
import { useAuth } from '@/contexts/AuthContext';
import Header from '@/components/Header';
import CommentSection from '@/components/CommentSection';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { useToast } from '@/hooks/use-toast';
import { Heart, MessageCircle, Share2, Image as ImageIcon } from 'lucide-react';

const Community = () => {
  const { user } = useAuth();
  const { toast } = useToast();
  const [newPost, setNewPost] = useState('');
  const [activeComments, setActiveComments] = useState<number | null>(null);
  
  const [posts] = useState([
    {
      id: 1,
      author: {
        name: "Minh Anh",
        avatar: "https://images.unsplash.com/photo-1494790108755-2616b612b786?w=40&h=40&fit=crop&crop=face",
        verified: true
      },
      content: "H√¥m nay m√¨nh ƒë√£ ho√†n th√†nh th·ª≠ th√°ch 30 ng√†y kh√¥ng d√πng ·ªëng h√∫t nh·ª±a! C·∫£m gi√°c th·∫≠t tuy·ªát khi bi·∫øt m√¨nh ƒë√£ g√≥p ph·∫ßn b·∫£o v·ªá m√¥i tr∆∞·ªùng. C√°c b·∫°n c≈©ng th·ª≠ th√°ch b·∫£n th√¢n nh√©! üå±",
      image: "https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=500&h=300&fit=crop",
      category: "Gi·∫£m r√°c th·∫£i",
      likes: 24,
      comments: 8,
      timeAgo: "2 gi·ªù tr∆∞·ªõc",
      tags: ["30ngaykhongonghua", "zerowaste", "s·ªëng_xanh"]
    },
    {
      id: 2,
      author: {
        name: "Ho√†ng Nam",
        avatar: "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=40&h=40&fit=crop&crop=face",
        verified: false
      },
      content: "Chia s·∫ª c√°ch l√†m t√∫i v·∫£i t·ª´ √°o c≈© si√™u ƒë∆°n gi·∫£n! Ch·ªâ c·∫ßn v√†i b∆∞·ªõc l√† c√≥ ngay t√∫i ƒë·ª±ng ƒë·ªì th√¢n thi·ªán m√¥i tr∆∞·ªùng. Video h∆∞·ªõng d·∫´n chi ti·∫øt ·ªü comment nh√©! ‚ôªÔ∏è",
      image: "https://images.unsplash.com/photo-1553062407-98eeb64c6a62?w=500&h=300&fit=crop",
      category: "T√°i ch·∫ø",
      likes: 156,
      comments: 23,
      timeAgo: "1 ng√†y tr∆∞·ªõc",
      tags: ["DIY", "taiche", "handmade"]
    },
    {
      id: 3,
      author: {
        name: "Thu H∆∞∆°ng",
        avatar: "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=40&h=40&fit=crop&crop=face",
        verified: true
      },
      content: "V∆∞·ªùn rau nh·ªè tr√™n s√¢n th∆∞·ª£ng sau 3 th√°ng chƒÉm s√≥c! T·ª´ nh·ªØng h·∫°t gi·ªëng nh·ªè b√© gi·ªù ƒë√£ cho thu ho·∫°ch rau s·∫°ch cho gia ƒë√¨nh. Ai mu·ªën b·∫Øt ƒë·∫ßu tr·ªìng rau th√¨ inbox m√¨nh nh√©! ü•¨üçÖ",
      image: "https://images.unsplash.com/photo-1416879595882-3373a0480b5b?w=500&h=300&fit=crop",
      category: "Tr·ªìng tr·ªçt",
      likes: 89,
      comments: 12,
      timeAgo: "3 ng√†y tr∆∞·ªõc",
      tags: ["vuonrau", "rausach", "nongsan"]
    }
  ]);

  const categories = [
    "T·∫•t c·∫£",
    "Gi·∫£m r√°c th·∫£i", 
    "T√°i ch·∫ø",
    "Ti·∫øt ki·ªám n∆∞·ªõc",
    "Ti·∫øt ki·ªám ƒëi·ªán",
    "Tr·ªìng tr·ªçt",
    "Giao th√¥ng xanh"
  ];

  const handleCreatePost = () => {
    if (!newPost.trim()) return;
    
    toast({
      title: "ƒêƒÉng b√†i th√†nh c√¥ng!",
      description: "B√†i vi·∫øt c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c chia s·∫ª v·ªõi c·ªông ƒë·ªìng.",
    });
    setNewPost('');
  };

  const handleLike = (postId: number) => {
    toast({
      title: "ƒê√£ th√≠ch b√†i vi·∫øt! ‚ù§Ô∏è",
      description: "C·∫£m ∆°n b·∫°n ƒë√£ ·ªßng h·ªô c·ªông ƒë·ªìng.",
    });
  };

  const handleToggleComments = (postId: number) => {
    setActiveComments(activeComments === postId ? null : postId);
  };

  if (!user) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-green-50 to-blue-50">
        <Header />
        <div className="container mx-auto px-4 py-16 text-center">
          <h1 className="text-3xl font-bold text-gray-800 mb-4">
            Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ tham gia c·ªông ƒë·ªìng
          </h1>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-blue-50">
      <Header />
      
      <div className="container mx-auto px-4 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-800 mb-2">C·ªông ƒë·ªìng s·ªëng xanh</h1>
          <p className="text-gray-600">Chia s·∫ª v√† h·ªçc h·ªèi kinh nghi·ªám s·ªëng b·ªÅn v·ªØng</p>
        </div>

        <div className="grid lg:grid-cols-4 gap-8">
          {/* Sidebar */}
          <div className="lg:col-span-1">
            <Card className="glass-effect mb-6">
              <CardHeader>
                <CardTitle className="text-green-800">Danh m·ª•c</CardTitle>
              </CardHeader>
              <CardContent className="space-y-2">
                {categories.map((category) => (
                  <Button
                    key={category}
                    variant="ghost"
                    className="w-full justify-start text-left hover:bg-green-50"
                  >
                    {category}
                  </Button>
                ))}
              </CardContent>
            </Card>

            <Card className="glass-effect">
              <CardHeader>
                <CardTitle className="text-green-800">Th·ªëng k√™ tu·∫ßn</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="text-center">
                  <div className="text-2xl font-bold text-green-600">156</div>
                  <div className="text-sm text-gray-600">B√†i vi·∫øt m·ªõi</div>
                </div>
                <div className="text-center">
                  <div className="text-2xl font-bold text-blue-600">2,341</div>
                  <div className="text-sm text-gray-600">L∆∞·ª£t t∆∞∆°ng t√°c</div>
                </div>
                <div className="text-center">
                  <div className="text-2xl font-bold text-purple-600">89</div>
                  <div className="text-sm text-gray-600">Th√†nh vi√™n m·ªõi</div>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Main Content */}
          <div className="lg:col-span-3 space-y-6">
            {/* Create Post */}
            <Card className="glass-effect">
              <CardHeader>
                <CardTitle className="text-green-800">Chia s·∫ª c√¢u chuy·ªán xanh</CardTitle>
                <CardDescription>
                  H√£y chia s·∫ª kinh nghi·ªám s·ªëng xanh c·ªßa b·∫°n v·ªõi c·ªông ƒë·ªìng
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <Textarea
                  placeholder="B·∫°n ƒëang nghƒ© g√¨ v·ªÅ vi·ªác s·ªëng xanh?"
                  value={newPost}
                  onChange={(e) => setNewPost(e.target.value)}
                  className="min-h-[100px]"
                />
                <div className="flex items-center justify-between">
                  <Button variant="outline" className="flex items-center gap-2">
                    <ImageIcon className="w-4 h-4" />
                    Th√™m ·∫£nh
                  </Button>
                  <Button 
                    onClick={handleCreatePost}
                    className="gradient-green text-white"
                    disabled={!newPost.trim()}
                  >
                    ƒêƒÉng b√†i
                  </Button>
                </div>
              </CardContent>
            </Card>

            {/* Posts */}
            <div className="space-y-6">
              {posts.map((post) => (
                <Card key={post.id} className="glass-effect">
                  <CardHeader>
                    <div className="flex items-start justify-between">
                      <div className="flex items-center space-x-3">
                        <Avatar>
                          <AvatarImage src={post.author.avatar} alt={post.author.name} />
                          <AvatarFallback>
                            {post.author.name.charAt(0)}
                          </AvatarFallback>
                        </Avatar>
                        <div>
                          <div className="flex items-center gap-2">
                            <span className="font-semibold">{post.author.name}</span>
                            {post.author.verified && (
                              <span className="text-blue-500">‚úì</span>
                            )}
                            <Badge variant="secondary">{post.category}</Badge>
                          </div>
                          <span className="text-sm text-gray-500">{post.timeAgo}</span>
                        </div>
                      </div>
                    </div>
                  </CardHeader>

                  <CardContent className="space-y-4">
                    <p className="text-gray-700 leading-relaxed">{post.content}</p>
                    
                    {post.image && (
                      <div className="rounded-lg overflow-hidden">
                        <img 
                          src={post.image} 
                          alt="Post content" 
                          className="w-full h-64 object-cover"
                        />
                      </div>
                    )}

                    <div className="flex flex-wrap gap-2">
                      {post.tags.map((tag) => (
                        <Badge key={tag} variant="outline" className="text-green-600">
                          #{tag}
                        </Badge>
                      ))}
                    </div>

                    <div className="flex items-center justify-between pt-4 border-t border-gray-100">
                      <div className="flex items-center space-x-6">
                        <Button 
                          variant="ghost" 
                          size="sm"
                          onClick={() => handleLike(post.id)}
                          className="flex items-center space-x-2 text-gray-600 hover:text-red-500"
                        >
                          <Heart className="w-4 h-4" />
                          <span>{post.likes}</span>
                        </Button>
                        
                        <Button 
                          variant="ghost" 
                          size="sm"
                          onClick={() => handleToggleComments(post.id)}
                          className={`flex items-center space-x-2 text-gray-600 hover:text-blue-500 ${
                            activeComments === post.id ? 'text-blue-500' : ''
                          }`}
                        >
                          <MessageCircle className="w-4 h-4" />
                          <span>{post.comments}</span>
                        </Button>
                        
                        <Button 
                          variant="ghost" 
                          size="sm"
                          className="flex items-center space-x-2 text-gray-600 hover:text-green-500"
                        >
                          <Share2 className="w-4 h-4" />
                          <span>Chia s·∫ª</span>
                        </Button>
                      </div>
                    </div>

                    {/* Comment Section */}
                    <CommentSection
                      postId={post.id}
                      isVisible={activeComments === post.id}
                      onClose={() => setActiveComments(null)}
                    />
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Community;
